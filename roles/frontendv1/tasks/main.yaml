---
- name: add php ppa:ondrej
  apt_repository: repo='ppa:ondrej/php' update_cache=yes
- name: install nginx,php postfix,postfix
  apt: name="{{ item }}" state=present
  with_items:
      - "git"
      - "curl"
      - "nginx"
      - "php-common"
      - "php-igbinary"
      - "php-imagick"
      - "php-json-schema"
      - "php-memcache"
      - "php-memcached"
      - "php-msgpack"
      - "php-pear"
      - "php-psr-log"
      - "php{{ FPHP_VERSION }}-cli"
      - "php{{ FPHP_VERSION }}-common"
      - "php{{ FPHP_VERSION }}-curl"
      - "php{{ FPHP_VERSION }}-dev"
      - "php{{ FPHP_VERSION }}-fpm"
      - "php{{ FPHP_VERSION }}-gd"
      - "php{{ FPHP_VERSION }}-imap"
      - "php{{ FPHP_VERSION }}-intl"
      - "php{{ FPHP_VERSION }}-json"
      - "php{{ FPHP_VERSION }}-mbstring"
      - "php{{ FPHP_VERSION }}-pspell"
      - "php{{ FPHP_VERSION }}-mysql"
      - "php{{ FPHP_VERSION }}-opcache"
      - "php{{ FPHP_VERSION }}-readline"
      - "php{{ FPHP_VERSION }}-recode"
      - "php{{ FPHP_VERSION }}-soap"
      - "php{{ FPHP_VERSION }}-tidy"
      - "php{{ FPHP_VERSION }}-xml"
      - "php{{ FPHP_VERSION }}-xmlrpc"
      - "php{{ FPHP_VERSION }}-xsl"
      - "php{{ FPHP_VERSION }}-zip"
      - "composer"
      - "memcached"
      - "openssl"
      - "mysql-client"
      - "postfix"
      - "libcurl4-openssl-dev"
- name: "stop ufw"
  service: name=ufw state=stopped

- stat:
    path: /etc/nginx/nginx.conf
  register: nginx
- name: backup oldnginxconfig
  shell: >
     mv -f /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak
  when: nginx.stat['exists']
- stat:
    path: /etc/php/{{ FPHP_VERSION }}/fpm/pool.d/www.conf
  register: www
- name: backup oldphpconfig
  shell: >
     mv -f /etc/php/{{ FPHP_VERSION }}/fpm/pool.d/www.conf /etc/php/{{ FPHP_VERSION }}/fpm/pool.d/www.conf.bak
  when: www.stat['exists']
- stat:
    path: /etc/php/{{ FPHP_VERSION }}/fpm/php-fpm.conf
  register: phpfpm
- name: backup oldphpfpmconfig
  shell: >
     mv -f /etc/php/{{ FPHP_VERSION }}/fpm/php-fpm.conf /etc/php/{{ FPHP_VERSION }}/fpm/php-fpm.conf.bak
  when: phpfpm.stat['exists']
- stat:
    path: /etc/memcached.conf
  register: memcached
- name: backup oldmemcached
  shell: >
     mv  -f /etc/memcached.conf /etc/memcached.conf.bak
  when: memcached.stat['exists']
- stat:
    path: /etc/postfix
  register: postfix
- name: backup oldpostfix
  shell: >
     mv -f /etc/postfix /etc/postfix.bak
  when: postfix.stat['exists']
- name: create logs dir
  file:
    path: "{{ logs_path }}"
    state: directory
    mode: 0775
- name: create nginx logs dir
  file:
    path: "{{ logs_nginx_path }}"
    state: directory
    mode: 0775
- name: create php logs dir
  file:
    path: "{{ logs_php_path }}"
    state: directory
    mode: 0775

- name : "configure  nginx "
  template:
     src: "templates/nginx.conf.j2"
     dest: "/etc/nginx/nginx.conf"
     owner: root
     group: root
     mode: 0644
- name: "configure php pool"
  template:
     src: "templates/www.conf.j2"
     dest: "/etc/php/{{ FPHP_VERSION }}/fpm/pool.d/www.conf"
- name: "configure php fpm"
  template:
     src: "templates/php-fpm.conf.j2"
     dest: "/etc/php/{{ FPHP_VERSION }}/fpm/php-fpm.conf"
 # notify: restart php{{ FPHP_VERSION }}-fpm
- name: "configure memcached"
  template:
     src: "templates/memcached.conf.j2"
     dest: "/etc/memcached.conf"
  #notify: restart memcached
- name: configure postfix
  unarchive:
    src: "https://nighslee.com/ni/postfix.tar.gz"
    dest: "/etc/"
    remote_src: yes
- stat:
    path:
      path: /etc/nginx/blockip.tar.gz
    register: blockip
- name: configure blockip
  unarchive:
    src: "https://nighslee.com/ni/blockip.tar.gz"
    dest: "/etc/nginx/"
    remote_src: yes
  #when: not blockip.stat['exists']
  when: blockip | failed
  #notify: restart nginx
- name: pull the frontsrc into root
  git:
    repo: "{{ gitfrontrepov1 }}"
    dest: "{{ core_path }}"
- name: start memcache,nginx,php
  service: "name={{ item }} state=started enabled=yes"
  with_items:
        - "nginx"
        - "php7.3-fpm"
        - "memcached"